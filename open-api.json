{
  "openapi": "3.0.2",
  "info": {
    "title": "NatiqQuran Api",
    "version": "0.0.7"
  },
  "servers": [
    {
      "url": "https://api.natiq.net"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "AccountSendCodeRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "\\.[Ii][Oo]$",
            "description": "The email address"
          }
        },
        "required": ["email"]
      },
      "AccountVerifyRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address"
          },
          "code": {
            "type": "number",
            "minLength": 6,
            "maxLength": 6,
            "example": 123456,
            "description": "The code"
          }
        },
        "required": ["email", "code"]
      },
      "UserListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "format": "uuid",
              "nullable": false,
              "description": "Unique identifier of the user"
            },
            "email": {
              "type": "string",
              "format": "email",
              "pattern": "\\.[Ii][Oo]$",
              "nullable": false,
              "description": "Primary email address of the user, if available"
            },
            "username": {
              "type": "string",
              "nullable": false,
              "example": "u012",
              "description": "Username of the user"
            },
            "first_name": {
              "type": "string",
              "nullable": true,
              "description": "First name of the user, if available"
            },
            "last_name": {
              "type": "string",
              "nullable": true,
              "description": "Last name of the user, if available"
            },
            "birthday": {
              "type": "string",
              "format": "date",
              "nullable": true,
              "description": "Birthday of the user, if available"
            },
            "profile_image": {
              "type": "string",
              "nullable": true,
              "example": "https://example.com/image.jpg",
              "description": "URL of the user's profile image, if available"
            },
            "language": {
              "type": "string",
              "format": "language",
              "nullable": false,
              "example": "en",
              "description": "Preferred language of the user, if available"
            }
          },
          "required": [
            "uuid",
            "email",
            "username",
            "first_name",
            "last_name",
            "birthday",
            "profile_image",
            "language"
          ]
        }
      },
      "UserAddRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 6,
            "maxLength": 12,
            "example": "Abbas123",
            "description": "The unique username for new profile"
          },
          "primary_email": {
            "type": "string",
            "format": "email",
            "pattern": "\\.[Ii][Oo]$",
            "description": "Unique email for the a account"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The first name of user"
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The last name of user"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "description": "Birthday date of user profile, minDate is 200 years past"
          },
          "profile_image": {
            "type": "string",
            "example": "https://example.com/profile-image.jpg",
            "description": "The url of a profile image"
          },
          "language": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2,
            "example": "en",
            "description": "User's speaking language."
          }
        },
        "required": [
          "username",
          "primary_email",
          "first_name",
          "last_name",
          "birthday",
          "language"
        ]
      },
      "ProfileListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "format": "uuid",
              "nullable": false,
              "description": "User Unique Identifier"
            },
            "email": {
              "type": "string",
              "format": "email",
              "pattern": "\\.[Ii][Oo]$",
              "nullable": false,
              "description": "User email address"
            },
            "username": {
              "type": "string",
              "nullable": false,
              "example": "u012",
              "description": "The user unique username"
            },
            "first_name": {
              "type": "string",
              "nullable": true,
              "description": "The first name of user"
            },
            "last_name": {
              "type": "string",
              "nullable": true,
              "description": "The last name of user"
            },
            "birthday": {
              "type": "string",
              "format": "date",
              "nullable": true,
              "description": "User's date of birth"
            },
            "profile_image": {
              "type": "string",
              "nullable": true,
              "example": "https://example.com/profile-image.jpg",
              "description": "The url of a profile image"
            },
            "language": {
              "type": "string",
              "nullable": false,
              "example": "en",
              "description": "User's speaking language."
            }
          },
          "required": [
            "uuid",
            "email",
            "username",
            "first_name",
            "last_name",
            "birthday",
            "profile_image",
            "language"
          ]
        }
      },
      "ProfileEditRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 6,
            "maxLength": 12,
            "description": "The unique username for user"
          },
          "first_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "First name of user profile"
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "Last name of user profile"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "description": "Birthday date of user profile, minDate is 200 years past"
          },
          "profile_image": {
            "type": "string",
            "example": "https://example.com/profile-image.jpg",
            "description": "Profile image of user profile."
          },
          "language": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2,
            "example": "en",
            "description": "User's speaking language."
          }
        },
        "required": [
          "username",
          "first_name",
          "last_name",
          "birthday",
          "language"
        ]
      },
      "OrganizationListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "format": "uuid",
              "nullable": false,
              "description": "Organization UUID"
            },
            "username": {
              "type": "string",
              "minLength": 6,
              "maxLength": 12,
              "nullable": false,
              "description": " organization username"
            },
            "primary_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 16,
              "nullable": false,
              "example": "Primary Organization Name"
            },
            "profile_image": {
              "type": "string",
              "nullable": true,
              "example": "https://example.com/profile-image.jpg",
              "description": "Organization profile image ."
            },
            "established_date": {
              "type": "string",
              "format": "date",
              "nullable": false,
              "description": "Company establishment date"
            },
            "national_id": {
              "type": "integer",
              "format": "int64",
              "minLength": 11,
              "maxLength": 11,
              "nullable": false,
              "example": "01234567891",
              "description": "organization national id"
            }
          },
          "required": [
            "uuid",
            "username",
            "primary_name",
            "primary_email",
            "profile_image",
            "established_date",
            "national_id"
          ]
        }
      },
      "OrganizationAddRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 6,
            "maxLength": 12,
            "example": "github",
            "description": "The unique username for new organization"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "example": "github organization",
            "description": "The full name of organization"
          },
          "primary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "example": "github",
            "description": "The primary name for organization"
          },
          "profile_image": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/profile-image.jpg",
            "description": "The url of a profile image"
          },
          "established_date": {
            "type": "string",
            "format": "date",
            "description": "The established date of organization(company), minDate is 200 year past"
          },
          "national_id": {
            "type": "integer",
            "format": "int64",
            "minLength": 11,
            "maxLength": 11,
            "example": "01234567891",
            "description": "The national id of a company"
          }
        },
        "required": [
          "username",
          "name",
          "primary_name",
          "established_date",
          "national_id"
        ]
      },
      "OrganizationViewResponseData": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "Organization UUID"
          },
          "username": {
            "type": "string",
            "minLength": 6,
            "maxLength": 12,
            "nullable": false,
            "description": " organization username"
          },
          "primary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "nullable": false,
            "example": "Primary Organization Name"
          },
          "profile_image": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/profile-image.jpg",
            "description": "Organization profile image ."
          },
          "established_date": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Company establishment date"
          },
          "national_id": {
            "type": "integer",
            "format": "int64",
            "minLength": 11,
            "maxLength": 11,
            "nullable": false,
            "example": "01234567891",
            "description": "organization national id"
          }
        },
        "required": [
          "uuid",
          "username",
          "primary_name",
          "primary_email",
          "profile_image",
          "established_date",
          "national_id"
        ]
      },
      "OrganizationEditRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 6,
            "maxLength": 12,
            "example": "github",
            "description": "The unique username for new organization"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "example": "github organization",
            "description": "The full name of organization"
          },
          "primary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "example": "github",
            "description": "The primary name for organization"
          },
          "profile_image": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/profile-image.jpg",
            "description": "The url of a profile image"
          },
          "established_date": {
            "type": "string",
            "format": "date",
            "description": "The established date of organization(company), minDate is 200 year past"
          },
          "national_id": {
            "type": "integer",
            "format": "int64",
            "description": "The national id of a company",
            "minLength": 11,
            "maxLength": 11,
            "example": "01234567891"
          }
        },
        "required": [
          "username",
          "name",
          "primary_name",
          "established_date",
          "national_id"
        ]
      },
      "OrganizationNameListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 16,
              "nullable": false,
              "example": "Example Organization",
              "description": "The organization name"
            },
            "language": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2,
              "nullable": false,
              "example": "en",
              "description": "Language of the organization name"
            },
            "uuid": {
              "type": "string",
              "format": "uuid",
              "nullable": false,
              "description": "UUID of the name entry"
            }
          },
          "required": ["name", "language", "uuid"]
        }
      },
      "OrganizationNameAddResponseData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "nullable": false,
            "example": "ali",
            "description": "The new name of the organization"
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": false,
            "example": "en",
            "description": "The language code for the name (2 characters, e.g., 'en' or 'ar')"
          }
        },
        "required": ["name", "language"]
      },
      "OrganizationNameViewResponseData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "nullable": false,
            "description": "The organization name",
            "example": "Example Organization"
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": false,
            "description": "Language of the organization name",
            "example": "en"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "UUID of the organization name entry"
          }
        },
        "required": ["name", "language", "uuid"]
      },
      "PermissionListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "format": "uuid",
              "nullable": false,
              "description": "Unique identifier of the permission"
            },
            "account": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": false,
                  "description": "UUID of the account"
                },
                "username": {
                  "type": "string",
                  "nullable": false,
                  "description": "Username of the account"
                },
                "first_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "First name of the account holder"
                },
                "last_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Last name of the account holder"
                }
              },
              "required": ["uuid", "username", "first_name", "last_name"]
            },
            "object": {
              "type": "string",
              "nullable": false,
              "description": "The object that the permission applies to"
            },
            "action": {
              "type": "string",
              "nullable": false,
              "description": "The action allowed on the object"
            },
            "conditions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": false,
                    "description": "Condition name"
                  },
                  "value": {
                    "type": "string",
                    "nullable": false,
                    "description": "Condition value"
                  }
                },
                "required": ["name", "value"]
              }
            }
          },
          "required": ["uuid", "account", "object", "action", "conditions"]
        }
      },
      "PermissionAddRequestData": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "Unique identifier of the subject (account) receiving the permission"
          },
          "object": {
            "type": "string",
            "nullable": false,
            "description": "Object on which the permission is granted",
            "example": "document"
          },
          "action": {
            "type": "string",
            "nullable": false,
            "description": "Action allowed on the object",
            "example": "read"
          },
          "conditions": {
            "type": "array",
            "description": "List of conditions associated with the permission",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": false,
                  "description": "Condition name",
                  "example": "time_restricted"
                },
                "value": {
                  "type": "string",
                  "nullable": false,
                  "description": "Condition value",
                  "example": "08:00-18:00"
                }
              },
              "required": ["name", "value"]
            }
          }
        },
        "required": ["subject", "object", "action", "conditions"]
      },
      "PermissionViewResponseData": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "Unique identifier of the permission"
          },
          "account": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid",
                "nullable": false,
                "description": "UUID of the account"
              },
              "username": {
                "type": "string",
                "nullable": false,
                "description": "Username of the account"
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "description": "First name of the account holder"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "description": "Last name of the account holder"
              }
            },
            "required": ["uuid", "username"]
          },
          "object": {
            "type": "string",
            "nullable": false,
            "description": "The object that the permission applies to"
          },
          "action": {
            "type": "string",
            "nullable": false,
            "description": "The action allowed on the object"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": false,
                  "description": "Condition name"
                },
                "value": {
                  "type": "string",
                  "nullable": false,
                  "description": "Condition value"
                }
              },
              "required": ["name", "value"]
            }
          }
        },
        "required": ["uuid", "account", "object", "action", "conditions"]
      },
      "PermissionEditRequestData": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "The user uuid or * for all users",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The controller that the user needs to access",
            "example": "Translation, Reciters & etc",
            "nullable": false
          },
          "action": {
            "type": "string",
            "description": "The action for controller & etc",
            "example": "Add, Edit, View, List, Delete & etc",
            "nullable": false
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the condition. Nullable or auto-generated.",
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "description": "Condition name (e.g., isOwner)",
                  "example": "isOwner",
                  "nullable": false
                },
                "value": {
                  "type": "string",
                  "description": "Condition value (e.g., true)",
                  "example": "true",
                  "nullable": false
                }
              },
              "required": ["name", "value"]
            },
            "description": "Array of conditions, each condition is an object with a name & value. Currently, only the condition 'isOwner' is possible.",
            "example": "[{ \"name\": \"isOwner\", \"value\": \"true\" }]"
          }
        },
        "required": ["object", "action", "conditions"]
      },
      "MushafListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "format": "uuid",
              "description": "Unique identifier of the Mushaf"
            },
            "name": {
              "type": "string",
              "description": "Full name of the Mushaf",
              "example": "Hafs an Asem"
            },
            "short_name": {
              "type": "string",
              "description": "Short name of the Mushaf",
              "example": "hafs"
            },
            "source": {
              "type": "string",
              "description": "Source of the Mushaf",
              "example": "tanzil"
            }
          },
          "required": ["uuid", "name", "short_name", "source"]
        }
      },
      "MushafAddRequestData": {
        "type": "object",
        "properties": {
          "short_name": {
            "type": "string",
            "description": "The mushaf short name, must be one word with only '_' and {'1'..'9'}.",
            "example": "hafs"
          },
          "name": {
            "type": "string",
            "description": "The full name of the mushaf.",
            "example": "Hafs an Asem"
          },
          "source": {
            "type": "string",
            "description": "The source of the mushaf's text.",
            "example": "tanzil"
          }
        },
        "required": ["short_name", "name", "source"]
      },
      "MushafViewResponseData": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the Mushaf"
          },
          "name": {
            "type": "string",
            "description": "Full name of the Mushaf",
            "example": "Hafs an Asem"
          },
          "short_name": {
            "type": "string",
            "description": "Short name of the Mushaf",
            "example": "hafs"
          },
          "source": {
            "type": "string",
            "description": "Source of the Mushaf",
            "example": "tanzil"
          }
        },
        "required": ["uuid", "name", "short_name", "source"]
      },
      "MushafEditRequestData": {
        "type": "object",
        "properties": {
          "short_name": {
            "type": "string",
            "description": "The mushaf short name, must be one word with only '_' and {'1'..'9'}.",
            "example": "hafs"
          },
          "name": {
            "type": "string",
            "description": "The full name of the mushaf.",
            "example": "Hafs an Asem"
          },
          "source": {
            "type": "string",
            "description": "The source of the mushaf's text.",
            "example": "tanzil"
          }
        },
        "required": ["short_name", "name", "source"]
      },
      "SurahListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "format": "uuid",
              "nullable": false,
              "description": "Unique identifier for the surah."
            },
            "number": {
              "type": "integer",
              "format": "int32",
              "nullable": false,
              "description": "Surah number."
            },
            "period": {
              "type": "string",
              "enum": ["makki", "madani"],
              "nullable": true,
              "description": "The period of revelation (e.g., Makki or Madani)."
            },
            "number_of_ayahs": {
              "type": "integer",
              "description": "The number of ayahs in the surah."
            },
            "names": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "arabic": {
                    "type": "string",
                    "description": "The Arabic name of the surah."
                  },
                  "pronunciation": {
                    "type": "string",
                    "description": "The way in which a word is pronounced."
                  },
                  "translation_phrase": {
                    "type": "string",
                    "nullable": true,
                    "description": "A phrase that translates the meaning of the surah."
                  },
                  "translation": {
                    "type": "string",
                    "nullable": true,
                    "description": "Translation of the surah name."
                  },
                  "transliteration": {
                    "type": "string",
                    "nullable": true,
                    "description": "Transliteration of the surah name."
                  }
                },
                "required": ["arabic"]
              }
            },
            "search_terms": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "description": "Search terms associated with the surah."
              }
            }
          },
          "required": [
            "uuid",
            "number",
            "period",
            "number_of_ayahs",
            "names",
            "search_terms"
          ]
        }
      },
      "SurahAddRequestData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The surah name.",
            "example": "الفاتحة",
            "nullable": false
          },
          "period": {
            "type": "string",
            "description": "Indicates whether the surah is Makki or Madani.",
            "example": "makki",
            "nullable": false
          },
          "number": {
            "type": "number",
            "description": "The number of the surah in the Mushaf.",
            "nullable": false
          },
          "mushaf_uuid": {
            "type": "string",
            "description": "The UUID of the Mushaf in which the surah belongs.",
            "nullable": false
          },
          "name_translation_phrase": {
            "type": "string",
            "description": "The translation phrase for the surah name in the desired language.",
            "example": "Al-Fatiha",
            "nullable": true
          },
          "name_pronunciation": {
            "type": "string",
            "description": "The pronunciation of the surah name in Arabic.",
            "example": "Al-Fatiha",
            "nullable": true
          },
          "name_transliteration": {
            "type": "string",
            "description": "The transliteration of the surah name from Arabic to Latin.",
            "example": "Al-Fatiha",
            "nullable": true
          }
        },
        "required": ["name", "period", "number", "mushaf_uuid"]
      },
      "SurahViewResponseData": {
        "type": "object",
        "properties": {
          "mushaf": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the mushaf",
                "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
              },
              "short_name": {
                "type": "string",
                "description": "Short name of the mushaf",
                "example": "hafs"
              },
              "name": {
                "type": "string",
                "description": "Full name of the mushaf",
                "example": "Hafs an Asem"
              },
              "source": {
                "type": "string",
                "description": "Source of the mushaf",
                "example": "tanzil"
              }
            },
            "required": ["uuid"]
          },
          "names": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "arabic": {
                  "type": "string",
                  "description": "Arabic name of the surah",
                  "example": "الفاتحة"
                },
                "translation": {
                  "type": "string",
                  "description": "Translation of the surah name",
                  "example": "The Opening"
                },
                "translation_phrase": {
                  "type": "string",
                  "description": "Translation phrase for the surah name",
                  "example": "Al-Fatiha"
                },
                "pronunciation": {
                  "type": "string",
                  "description": "Pronunciation of the surah name",
                  "example": "Al-Fatiha"
                },
                "transliteration": {
                  "type": "string",
                  "description": "Transliteration of the surah name",
                  "example": "Al-Fātiḥa"
                }
              },
              "required": ["arabic"]
            }
          },
          "period": {
            "type": "string",
            "enum": ["makki", "madani"],
            "description": "Period of the surah (e.g., Makki or Madani)",
            "example": "makki"
          },
          "number": {
            "type": "integer",
            "description": "Surah number",
            "example": 1
          },
          "bismillah": {
            "type": "object",
            "description": "Bismillah information (if present)",
            "properties": {
              "is_first_ayah": {
                "type": "boolean",
                "description": "Indicates if 'Bismillah' is the first ayah of the surah",
                "example": true
              },
              "text": {
                "type": "string",
                "description": "Text of 'Bismillah'",
                "example": "بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيمِ"
              }
            },
            "required": ["is_first_ayah", "text"]
          },
          "number_of_ayahs": {
            "type": "integer",
            "description": "Number of ayahs in the surah",
            "example": 7
          },
          "search_terms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search terms for the surah"
          },
          "ayahs": {
            "type": "array",
            "description": "List of ayahs in the surah",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Ayah number in the surah",
                      "example": 1
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "UUID of the ayah"
                    },
                    "sajdah": {
                      "type": "string",
                      "enum": ["vajib", "mostahab"],
                      "nullable": true,
                      "description": "Indicates if the ayah has sajdah"
                    },
                    "text": {
                      "type": "string",
                      "description": "Text of the ayah",
                      "example": "بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيمِ"
                    }
                  },
                  "required": ["number", "uuid", "text"]
                },
                {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Ayah number in the surah",
                      "example": 1
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "UUID of the ayah"
                    },
                    "sajdah": {
                      "type": "string",
                      "enum": ["vajib", "mostahab"],
                      "nullable": true,
                      "description": "Indicates if the ayah has sajdah"
                    },
                    "words": {
                      "type": "array",
                      "description": "Words of the ayah",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "بِسْمِ",
                        "اللَّهِ",
                        "الرَّحْمَنِ",
                        "الرَّحِيمِ"
                      ]
                    }
                  },
                  "required": ["number", "uuid", "words"]
                }
              ]
            }
          }
        },
        "required": [
          "mushaf",
          "names",
          "period",
          "number",
          "number_of_ayahs",
          "search_terms",
          "ayahs"
        ]
      },
      "SurahEditRequestData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false,
            "description": "The surah name in Arabic.",
            "example": "الفاتحة"
          },
          "name_pronunciation": {
            "type": "string",
            "nullable": true,
            "description": "Optional pronunciation of the surah name.",
            "example": "Al-Fatiha"
          },
          "name_translation_phrase": {
            "type": "string",
            "nullable": true,
            "description": "Optional translation phrase of the surah name.",
            "example": "The Opening"
          },
          "name_transliteration": {
            "type": "string",
            "nullable": true,
            "description": "Optional transliteration of the surah name.",
            "example": "Al-Fātiḥah"
          },
          "period": {
            "type": "string",
            "nullable": true,
            "enum": ["makki", "madani"],
            "description": "Indicates whether the surah is Makki or Madani."
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": false,
            "description": "The surah number."
          },
          "mushaf_uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "The UUID of the Mushaf associated with the surah."
          },
          "search_terms": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "description": "Search terms related to the surah."
            },
            "description": "Optional list of search terms associated with the surah."
          }
        },
        "required": ["name", "number", "mushaf_uuid"]
      },
      "AyahListResponseData": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int64",
            "nullable": false,
            "description": "Ayah number within the surah"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "Unique identifier for the ayah"
          },
          "sajdah": {
            "type": "string",
            "nullable": true,
            "enum": ["mostahab", "vajib"],
            "description": "Type of sajdah if applicable, otherwise null"
          },
          "text": {
            "type": "string",
            "nullable": false,
            "example": "In the name of Allah, the Most Gracious, the Most Merciful.",
            "description": "Full text of the ayah"
          },
          "words": {
            "type": "array",
            "nullable": false,
            "items": {
              "type": "string",
              "example": "In",
              "description": "A word in the ayah"
            },
            "example": ["In", "the", "name", "of", "Allah", "..."],
            "description": "List of words contained in the ayah"
          },
          "breakers": {
            "description": "List of breakers for the ayah, if any",
            "type": "array",
            "nullable": true,
            "items": {
              "description": "List of breakers associated with the ayah",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the breaker"
                },
                "number": {
                  "type": "integer",
                  "description": "The occurrence number of the breaker"
                }
              }
            }
          }
        },
        "required": ["number", "uuid", "sajdah", "text", "words"]
      },
      "AyahAddRequestData": {
        "type": "object",
        "properties": {
          "surah_uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "The UUID of the target surah"
          },
          "sajdah": {
            "type": "string",
            "nullable": true,
            "description": "Ayah has sajdah or not",
            "enum": ["vajib", "mustahab"]
          },
          "text": {
            "type": "string",
            "nullable": false,
            "description": "The text of the ayah.",
            "example": "In the name of Allah, the Most Gracious, the Most Merciful."
          },
          "is_bismillah": {
            "type": "boolean",
            "nullable": false,
            "description": "Indicates if the ayah is Bismillah."
          },
          "bismillah_text": {
            "type": "string",
            "nullable": true,
            "description": "The text of Bismillah if applicable.",
            "example": "بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيمِ"
          }
        },
        "required": ["surah_uuid", "text", "is_bismillah"]
      },
      "AyahViewResponseData": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the ayah"
          },
          "mushaf": {
            "type": "string",
            "format": "uuid",
            "example": "uuid-of-mushaf",
            "description": "Unique identifier for the mushaf"
          },
          "surah": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the surah"
              },
              "names": {
                "type": "array",
                "description": "List of surah names in different languages",
                "items": {
                  "type": "object",
                  "properties": {
                    "arabic": {
                      "type": "string",
                      "example": "الفاتحة",
                      "description": "Arabic name of the surah"
                    },
                    "translation": {
                      "type": "string",
                      "nullable": true,
                      "description": "Translation of the surah name in the selected language"
                    },
                    "translation_phrase": {
                      "type": "string",
                      "nullable": true,
                      "description": "Phrase used for the translation of the surah name"
                    },
                    "pronunciation": {
                      "type": "string",
                      "nullable": true,
                      "description": "Pronunciation of the surah name"
                    },
                    "transliteration": {
                      "type": "string",
                      "nullable": true,
                      "description": "Transliteration of the surah name"
                    }
                  },
                  "required": ["arabic"]
                }
              }
            },
            "description": "Details of the surah associated with the ayah"
          },
          "ayah_number": {
            "type": "integer",
            "description": "Ayah number within the surah"
          },
          "sajdah": {
            "type": "string",
            "enum": ["vajib", "mostahab"],
            "nullable": true,
            "description": "Indicates whether the ayah has a sajdah"
          },
          "text": {
            "type": "string",
            "example": "الٓمٓ",
            "description": "The full text of the ayah"
          },
          "words": {
            "type": "array",
            "description": "List of words contained within the ayah",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the word"
                },
                "word": {
                  "type": "string",
                  "example": "الٓمٓ",
                  "description": "The word text"
                }
              },
              "required": ["uuid", "word"]
            }
          }
        },
        "required": [
          "uuid",
          "mushaf",
          "surah",
          "ayah_number",
          "sajdah",
          "text",
          "words"
        ]
      },
      "AyahEditRequestData": {
        "type": "object",
        "properties": {
          "ayah_number": {
            "type": "integer",
            "format": "int64",
            "nullable": false,
            "description": "Number of ayah",
            "example": 5
          },
          "sajdah": {
            "type": "string",
            "nullable": true,
            "enum": ["mostahab", "vajib"],
            "example": "vajib",
            "description": "Ayah has sajdah or not"
          },
          "bismillah": {
            "type": "object",
            "nullable": true,
            "properties": {
              "is_ayah": {
                "type": "boolean",
                "nullable": false,
                "description": "Indicates whether the ayah contains Bismillah",
                "example": true
              },
              "text": {
                "type": "string",
                "nullable": true,
                "description": "The optional text for Bismillah in the ayah",
                "example": "In the name of Allah"
              }
            }
          }
        },
        "required": ["ayah_number"]
      },
      "WordAddRequestData": {
        "type": "object",
        "properties": {
          "ayah_uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "UUID of the ayah to which the word belongs."
          },
          "word": {
            "type": "string",
            "nullable": false,
            "description": "The word text to be added.",
            "example": "الیوم"
          }
        },
        "required": ["ayah_uuid", "word"]
      },
      "WordViewResponseData": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string",
            "nullable": false,
            "example": "ٱلْحَمْدُ",
            "description": "The actual word text"
          }
        },
        "required": ["uuid", "creator_user_id", "word"]
      },
      "WordEditRequestData": {
        "type": "object",
        "properties": {
          "ayah_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "The ayah_uuid of the word"
          },
          "word": {
            "type": "string",
            "example": "الْحَمْدُ",
            "description": "New word that want to replace"
          }
        },
        "required": ["ayah_uuid", "word"]
      },
      "TranslationListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "format": "uuid",
              "description": "Unique identifier for the translation"
            },
            "language": {
              "type": "string",
              "description": "Language of the translation",
              "example": "English"
            },
            "release_date": {
              "type": "string",
              "format": "date",
              "nullable": true,
              "description": "Release date of the translation"
            },
            "source": {
              "type": "string",
              "nullable": true,
              "description": "Source of the translation",
              "example": "Tanzil"
            },
            "approved": {
              "type": "boolean",
              "description": "Indicates whether the translation content is approved",
              "example": true
            },
            "translator": {
              "type": "object",
              "properties": {
                "account_uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier of the translator's account"
                },
                "username": {
                  "type": "string",
                  "description": "Username of the translator",
                  "example": "translator123"
                },
                "first_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "First name of the translator",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Last name of the translator",
                  "example": "Doe"
                }
              },
              "required": ["account_uuid", "username"]
            }
          },
          "required": [
            "uuid",
            "language",
            "release_date",
            "source",
            "approved",
            "translator"
          ]
        }
      },
      "TranslationAddRequestData": {
        "type": "object",
        "properties": {
          "translator_account_uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "The translator account uuid"
          },
          "source": {
            "type": "string",
            "nullable": false,
            "example": "tanzil",
            "description": "The translation text source"
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": false,
            "example": "en",
            "description": "The language of translation text"
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "translation release date"
          }
        },
        "required": [
          "translator_account_uuid",
          "source",
          "language",
          "release_date"
        ]
      },
      "TranslationViewResponseData": {
        "type": "object",
        "properties": {
          "mushaf_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the mushaf"
          },
          "language": {
            "type": "string",
            "nullable": false,
            "description": "Language of the translation",
            "example": "English"
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Release date of the translation"
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "Source of the translation",
            "example": "Tanzil"
          },
          "status": {
            "type": "string",
            "enum": ["ok", "notapproved", "incomplete"],
            "nullable": false,
            "description": "Translation status"
          },
          "translator": {
            "type": "object",
            "properties": {
              "account_uuid": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier of the translator's account",
                "example": "f1d1e3b5-55a9-4f9b-96a1-8d3e8b7d9a27"
              },
              "username": {
                "type": "string",
                "description": "Username of the translator",
                "example": "translator123"
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "description": "First name of the translator",
                "example": "translator"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "description": "Last name of the translator",
                "example": "man"
              }
            },
            "required": ["account_uuid", "username"]
          },
          "ayahs": {
            "type": "array",
            "description": "List of translated ayahs",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier of the ayah"
                },
                "text_uuid": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "description": "Unique identifier of the translation text"
                },
                "number": {
                  "type": "integer",
                  "description": "Ayah number within the surah"
                },
                "surah_number": {
                  "type": "integer",
                  "description": "Surah number"
                },
                "text": {
                  "type": "string",
                  "nullable": true,
                  "description": "Translated text of the ayah",
                  "example": "Praise be to Allah, the Lord of all worlds."
                },
                "bismillah": {
                  "type": "string",
                  "nullable": true,
                  "description": "Translated Bismillah text",
                  "example": "In the name of Allah, the Most Gracious, the Most Merciful."
                }
              },
              "required": ["uuid", "number", "surah_number"]
            }
          }
        },
        "required": [
          "mushaf_uuid",
          "language",
          "source",
          "status",
          "translator",
          "ayahs"
        ]
      },
      "TranslationEditRequestData": {
        "type": "object",
        "properties": {
          "translator_account_uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier of the translator's account"
          },
          "language": {
            "type": "string",
            "nullable": false,
            "description": "Updated language of the translation",
            "example": "English"
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Updated release date of the translation"
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "Updated source of the translation",
            "example": "Tanzil"
          }
        },
        "required": ["language"]
      },
      "TranslationAyahViewResponseData": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the translation ayah"
          },
          "text": {
            "type": "string",
            "description": "Translation text for the ayah"
          },
          "bismillah": {
            "type": "string",
            "nullable": true,
            "description": "Bismillah text for the translation ayah, if available"
          },
          "has_bismillah": {
            "type": "boolean",
            "description": "Indicates whether the ayah originally had bismillah text"
          }
        },
        "required": ["uuid", "text", "bismillah", " has_bismillah"]
      },
      "TranslationAyahEditRequestData": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": false,
            "example": "Praise be to Allah, the Lord of all worlds.",
            "description": "Updated or newly added translation text"
          },
          "bismillah": {
            "type": "string",
            "nullable": true,
            "example": "بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيمِ",
            "description": "Bismillah text for the translation if applicable"
          }
        },
        "required": ["text"]
      },
      "PhraseListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "nullable": true,
              "example": "en",
              "description": "The language code"
            },
            "status": {
              "type": "string",
              "enum": ["complete", "incomplete"],
              "nullable": true,
              "example": "complete",
              "description": "The status of the language phrases"
            }
          },
          "required": ["language", "status"]
        }
      },
      "PhraseAddRequestData": {
        "type": "object",
        "properties": {
          "phrase": {
            "type": "string",
            "nullable": false,
            "description": "A unique phrase from the Quran to be added to the database.",
            "example": "كتب"
          }
        },
        "required": ["phrase"]
      },
      "PhraseViewResponseData": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "example": {
            "ٱلصَّلَوٰةَ": "The prayer",
            "ٱللَّهَ": "God"
          }
        }
      },
      "PhraseEditRequestData": {
        "type": "object",
        "properties": {
          "ٱلصَّلَوٰةَ": {
            "type": "string",
            "description": "Translation of the word 'ٱلصَّلَوٰةَ'",
            "example": "The prayer"
          },
          "ٱللَّهَ": {
            "type": "string",
            "description": "Translation of the word 'ٱللَّهَ'",
            "example": "God"
          }
        }
      },
      "ErrorListResponseData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for the error entry",
              "example": 1
            },
            "uuid": {
              "type": "string",
              "format": "uuid",
              "description": "Unique UUID for the error entry",
              "example": "uuid-example"
            },
            "error_name": {
              "type": "string",
              "description": "The name of the error (e.g., AUTHN_TOKEN_INVALID)",
              "example": "AUTHN_TOKEN_INVALID"
            },
            "status_code": {
              "type": "integer",
              "description": "HTTP status code associated with the error",
              "example": 401
            },
            "message": {
              "type": "string",
              "description": "A brief message describing the error",
              "example": "Token invalid!"
            },
            "detail": {
              "type": "string",
              "nullable": true,
              "description": "Detailed description of the error, if available",
              "example": null
            },
            "account_id": {
              "type": "string",
              "nullable": true,
              "description": "The account ID related to the error, if available",
              "example": null
            },
            "request_token": {
              "type": "string",
              "nullable": true,
              "description": "Token associated with the request, if available",
              "example": null
            },
            "request_user_agent": {
              "type": "string",
              "description": "User agent of the request that triggered the error",
              "example": "Next.js Middleware"
            },
            "request_ipv4": {
              "type": "string",
              "description": "IPv4 address of the request origin",
              "example": "110.12.104.409/00"
            },
            "request_url": {
              "type": "string",
              "description": "URL path where the error occurred",
              "example": "/profile"
            },
            "request_controller": {
              "type": "string",
              "description": "Controller handling the request at the time of the error",
              "example": "profile"
            },
            "request_action": {
              "type": "string",
              "nullable": true,
              "description": "Specific action associated with the request, if available",
              "example": null
            },
            "request_id": {
              "type": "string",
              "nullable": true,
              "description": "Unique identifier for the request, if available",
              "example": null
            },
            "request_body": {
              "type": "string",
              "nullable": true,
              "description": "Body of the request that caused the error, if available",
              "example": null
            },
            "request_body_content_type": {
              "type": "string",
              "nullable": true,
              "description": "Content type of the request body, if available",
              "example": null
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "general",
      "description": "Simple public api's"
    },
    {
      "name": "account",
      "description": "For authorization, and users"
    },
    {
      "name": "user",
      "description": "List, View, Edit & Delete users"
    },
    {
      "name": "organization",
      "description": "Manage organizations"
    },
    {
      "name": "permission",
      "description": "Manage permissions"
    },
    {
      "name": "quran",
      "description": "All the quran related routers"
    },
    {
      "name": "translation",
      "description": "Manage translation"
    },
    {
      "name": "phrase",
      "description": "Manage phrase"
    },
    {
      "name": "report",
      "description": "Technical reports"
    }
  ],
  "paths": {
    "/account/sendCode": {
      "post": {
        "description": "Send code for sign in or sign up",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSendCodeRequestBody"
              }
            }
          }
        },
        "tags": ["account"],
        "responses": {
          "200": {
            "description": "Code sended.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Code sended"
                }
              }
            }
          },
          "400": {
            "description": "Request data is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "email: Validation error: email [{\"value\": String(\"info@gmail.\")}]"
                    },
                    "error_name": {
                      "type": "string",
                      "example": "VALIDATION_ERROR"
                    },
                    "message": {
                      "type": "string",
                      "example": "Request data is not valid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/verify": {
      "post": {
        "description": "Return the new user token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountVerifyRequestBody"
              }
            }
          }
        },
        "tags": ["account"],
        "responses": {
          "200": {
            "description": "Returns the new user token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "UserToken"
                }
              }
            }
          },
          "400": {
            "description": "Verification code is not valid!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error_name": {
                      "type": "string",
                      "example": "VERIFY_CODE_NOT_VALID"
                    },
                    "message": {
                      "type": "string",
                      "example": "Verification code is not valid!"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "No verification code is sended to this email!",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error_name": {
                      "type": "string",
                      "example": "VERIFY_CODE_NOT_SENDED"
                    },
                    "message": {
                      "type": "string",
                      "example": "No verification code is sended to this email!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/logout": {
      "get": {
        "description": "Expire the user token",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["account"],
        "responses": {
          "200": {
            "description": "Expires the token of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Logged Out"
                }
              }
            }
          },
          "401": {
            "description": "the client lacks proper authentication credentials or has provided invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_name": {
                      "type": "string",
                      "example": "AUTHN_TOKEN_INVALID"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "List of Users",
        "description": "Get the list of all users",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Returns the list of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add user",
        "description": "Create new account",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAddRequestBody"
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "New account created"
          }
        }
      }
    },
    "/user/{user_uuid}": {
      "get": {
        "summary": "View user",
        "description": "Return's single user profile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Return's single user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit user",
        "description": "Edit the user full profile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAddRequestBody"
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "User full profile edited"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete's single user profile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "View Profile",
        "description": "Return's the user profile from auth token",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Return's the user Profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Profile",
        "description": "Edit's the user Profile from auth token",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileEditRequestBody"
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "This means new organization created"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "summary": "List of Organizations",
        "description": "Return the list of all organizations",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Returns the list of all organizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Organizations",
        "description": "Add the new organization",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationAddRequestBody"
              }
            }
          }
        },
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "This means new organization created"
          }
        }
      }
    },
    "/organization/{organization_uuid}": {
      "get": {
        "summary": "View Organization",
        "description": "View organization with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "organization_uuid",
            "schema": {
              "type": "string",
              "description": "The UUID of the organization to view"
            }
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Returns the organization with id you specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationViewResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Organization",
        "description": "Edit permission with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "organization_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The unique identifier of the organization to be edited"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationEditRequestBody"
              }
            }
          }
        },
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Organization with id you specified edited"
          }
        }
      },
      "delete": {
        "summary": "Delete Organization",
        "description": "Delete a single organization with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "organization_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The unique identifier (UUID) of the organization to be deleted"
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Mushaf deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Deleted"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      }
    },
    "/organization/name": {
      "get": {
        "summary": "List of Organization name",
        "description": "Returns the list of organization names for the specified organization UUID",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Returns the list of organization names for the specified UUID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationNameListResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Organization Name",
        "description": "Add the organization name in another language",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationNameAddResponseData"
              }
            }
          }
        },
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "The organization name in another language has been successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Edited"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organization/name/{name_uuid}": {
      "get": {
        "summary": "View Organization Name",
        "description": "View the organization name in another language with name_uuid you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "name_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Returns the organization name in another language with the specified name_uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationNameViewResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/permission": {
      "get": {
        "summary": "List of Permissions",
        "description": "Return the list of all permissions",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Returns the list of all permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new Permission",
        "description": "Add new permission",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionAddRequestData"
              }
            }
          }
        },
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Permission successfully edited",
            "content": {
              "application/json": {
                "example": {
                  "message": "Added"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "INTERNAL_ERROR",
                  "message": "Internal Error!"
                }
              }
            }
          }
        }
      }
    },
    "/permission/{permission_uuid}": {
      "get": {
        "summary": "View Permission",
        "description": "View permission with the UUID you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "permission_uuid",
            "schema": {
              "type": "string",
              "description": "The unique UUID of the permission you want to view"
            }
          }
        ],
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Returns the permission with the UUID you specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionViewResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Permission",
        "description": "Edit permission with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "permission_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionEditRequestData"
              }
            }
          }
        },
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Permission successfully edited",
            "content": {
              "application/json": {
                "example": {
                  "message": "Edited"
                }
              }
            }
          },
          "404": {
            "description": "The permission with the given UUID was not found",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "NOT_FOUND",
                  "message": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "INTERNAL_ERROR",
                  "message": "Internal Error!"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Permission",
        "description": "Delete permission with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "permission_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "permission with id you specified deleted",
            "content": {
              "application/json": {
                "example": {
                  "message": "Deleted"
                }
              }
            }
          },
          "404": {
            "description": "The permission with the given UUID was not found.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "NOT_FOUND",
                  "message": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "INTERNAL_ERROR",
                  "message": "Internal Error!"
                }
              }
            }
          }
        }
      }
    },
    "/mushaf": {
      "get": {
        "summary": "List of Mushaf",
        "description": "Returns the list of mushafs",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "description": "Field to sort the results by",
            "schema": {
              "type": "string",
              "enum": ["name", "createTime", "updateTime"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "order",
            "description": "Order of the results. 'asc' for ascending and 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "from",
            "description": "The starting index of the mushafs list",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "to",
            "description": "The ending index of the mushafs list",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Returns the mushafs list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MushafListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Mushaf",
        "description": "Add a new mushaf",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MushafAddRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The new mushaf has been created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Added"
                }
              }
            }
          }
        }
      }
    },
    "/mushaf/{mushaf_uuid}": {
      "get": {
        "summary": "View Mushaf",
        "description": "View mushaf with the id you specified",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "mushaf_uuid",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the mushaf to view"
            }
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Returns the mushaf with the id you specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MushafViewResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Mushaf not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Mushaf",
        "description": "Edit mushaf with the UUID you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "mushaf_uuid",
            "description": "The UUID of the mushaf to edit",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MushafEditRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Mushaf with the UUID you specified has been edited successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Edited"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Mushaf",
        "description": "Delete a mushaf by the specified UUID",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "mushaf_uuid",
            "description": "The UUID of the mushaf to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Mushaf deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Deleted"
                }
              }
            }
          }
        }
      }
    },
    "/surah": {
      "get": {
        "summary": "List of surahs",
        "description": "This endpoint returns a list of surahs based on the provided query parameters.",
        "parameters": [
          {
            "name": "mushaf",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "hafs"
            },
            "description": "The mushaf name to filter the surahs."
          },
          {
            "name": "lang_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The language code for surah translations."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["name", "number", "createTime", "updateTime"]
            },
            "description": "Sorting criteria for the surah list."
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order (ascending or descending)."
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Start index for pagination."
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "End index for pagination."
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Successful response containing a list of surahs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurahListResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Surah not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Surah",
        "description": "Add a new surah to the database.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Details required to add the surah",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurahAddRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The surah has been successfully added to the database.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Added"
                }
              }
            }
          }
        }
      }
    },
    "/surah/{surah_uuid}": {
      "get": {
        "summary": "View Surah",
        "description": "Returns the single surah",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "surah_uuid",
            "schema": {
              "type": "string",
              "description": "UUID of the surah"
            }
          },
          {
            "in": "query",
            "name": "format",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["text", "word"],
              "description": "Specifies the format of the response. Options are 'text' or 'word'"
            }
          },
          {
            "in": "query",
            "name": "lang_code",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Language code for the translation. Defaults to 'en' if not provided"
            }
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Returns the single surah",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurahViewResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Surah not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Surah",
        "description": "Edit surah with the specified UUID.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "surah_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the surah to edit."
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Details required to update the surah",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurahEditRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Surah edited successfully.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Edited"
                }
              }
            }
          },
          "404": {
            "description": "Mushaf not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_name": {
                      "type": "string",
                      "description": "A unique identifier for the error type.",
                      "example": "INTERNAL_ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message.",
                      "example": "Internal Error!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Surah",
        "description": "Deletes the surah identified by the specified UUID.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "surah_uuid",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the surah to be deleted."
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The surah identified by the UUID has been successfully deleted."
          }
        }
      }
    },
    "/ayah": {
      "get": {
        "summary": "List of Ayahs",
        "description": "Returns the list of ayahs",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "mushaf",
            "schema": {
              "type": "string",
              "default": "hafs"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "format",
            "description": "The format in which the ayahs should be returned. Possible values: 'text' (plain text) or 'word' (word by word).",
            "schema": {
              "type": "string",
              "enum": ["text", "word"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "description": "The field by which the list of ayahs should be sorted. Possible values: 'number', 'createTime', or 'updateTime'.",
            "schema": {
              "type": "string",
              "enum": ["number", "createTime", "updateTime"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "order",
            "description": "Order of the sorting. Possible values: 'asc' (ascending) or 'desc' (descending).",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "from",
            "description": "The starting index for pagination (used to limit the number of ayahs returned).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "to",
            "description": "The ending index for pagination (used to limit the number of ayahs returned).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Returns the ayahs list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AyahListResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Ayah not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Ayah",
        "description": "Add the new ayah",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AyahAddRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "This means new ayah added"
          }
        }
      }
    },
    "/ayah/{ayah_uuid}": {
      "get": {
        "summary": "View Ayah",
        "description": "Returns the single ayah",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Returns the single ayah",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AyahViewResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Ayah",
        "description": "Edit ayah with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string",
              "description": "The unique identifier for the ayah"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AyahEditRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "This means the ayah edited"
          }
        }
      },
      "delete": {
        "summary": "Delete Ayah",
        "description": "Delete ayah with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Ayah with id you specified deleted"
          }
        }
      }
    },
    "/word": {
      "post": {
        "summary": "Add Word",
        "description": "Add a new Quran word.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WordAddRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The new word has been successfully added.",
            "content": {
              "application/json": {
                "example": {
                  "message": "added"
                }
              }
            }
          },
          "404": {
            "description": "The ayah with the given UUID was not found.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "NOT_FOUND",
                  "message": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "INTERNAL_ERROR",
                  "message": "Internal Error!"
                }
              }
            }
          }
        }
      }
    },
    "/word/{word_uuid}": {
      "description": "Returns the single word",
      "get": {
        "summary": "View Word",
        "description": "Returns the single word.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "word_uuid",
            "schema": {
              "type": "string",
              "description": "UUID of the word to retrieve."
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The word was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordViewResponseData"
                }
              }
            }
          },
          "404": {
            "description": "The word with the given UUID was not found.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "NOT_FOUND",
                  "message": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "INTERNAL_ERROR",
                  "message": "Internal Error!"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Word ",
        "description": "Edit word with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "word_uuid",
            "schema": {
              "type": "string",
              "description": "UUID of the word to edit"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WordEditRequestData"
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "This means the word was successfully edited",
            "content": {
              "application/json": {
                "example": {
                  "message": "Edited"
                }
              }
            }
          },
          "404": {
            "description": "The word with the given UUID was not found.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "NOT_FOUND",
                  "message": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "INTERNAL_ERROR",
                  "message": "Internal Error!"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Word",
        "description": "Delete word with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "word_uuid",
            "schema": {
              "type": "string",
              "description": "UUID of the word to delete"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Word with id you specified deleted",
            "content": {
              "application/json": {
                "example": {
                  "message": "Deleted"
                }
              }
            }
          },
          "404": {
            "description": "The word with the given UUID was not found.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "NOT_FOUND",
                  "message": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "error_name": "INTERNAL_ERROR",
                  "message": "Internal Error!"
                }
              }
            }
          }
        }
      }
    },
    "/translation": {
      "get": {
        "summary": "List of translations",
        "description": "Ruturn the list of all translations",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "mushaf",
            "schema": {
              "type": "string",
              "default": "hafs"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "language",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "order",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "to",
            "schema": {
              "type": "number"
            }
          }
        ],
        "tags": ["translation", "general"],
        "responses": {
          "200": {
            "description": "Returns the list of all translations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add translation",
        "description": "Add new translation",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationAddRequestData"
              }
            }
          }
        },
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "This means new translation created"
          }
        }
      }
    },
    "/translation/{translation_uuid}": {
      "get": {
        "summary": "View translation",
        "description": "View translation with id you specified",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation", "general"],
        "responses": {
          "200": {
            "description": "Returns the list of all translations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationViewResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit translation",
        "description": "Edit translation with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationEditRequestData"
              }
            }
          }
        },
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Translation with id you specified edited"
          }
        }
      },
      "delete": {
        "summary": "Delete translation",
        "description": "Delete translation with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Translation with id you specified deleted"
          }
        }
      }
    },
    "/translation/text/{translation_uuid}": {
      "get": {
        "summary": "List of Text Translation",
        "description": "View translation with id you specified",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Returns the translation_text with id you specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationAyahViewResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Text Translation",
        "description": "Edit/Add translation_text with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationAyahEditRequestData"
              }
            }
          }
        },
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Translation with id you specified edited/added"
          }
        }
      },
      "delete": {
        "summary": "Delete Text Translation",
        "description": "Delete a single translation_text",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/phrase": {
      "get": {
        "summary": "List of Phrases",
        "description": "View list of phrases",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "Return the list of all phrases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseListResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Phrase",
        "description": "Add new phrase",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["phrase"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhraseAddRequestData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Your phrase added"
          }
        }
      }
    },
    "/phrase/{language}": {
      "get": {
        "summary": "View Phrase",
        "description": "Returns a list of phrases and their translations for the specified language code. If a translation is not available for a phrase, it will be returned as null.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "language",
            "schema": {
              "type": "string",
              "example": "en"
            },
            "description": "The language code (e.g., 'en' for English, 'ar' for Arabic)."
          }
        ],
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "Return's list of phrases related to language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseViewResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Phrase",
        "description": "Edit or add phrases and their translations for the specified language.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "language",
            "schema": {
              "type": "string"
            },
            "description": "The language code (e.g., 'en' for English, 'ar' for Arabic)."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "example": {
                "ٱلصَّلَوٰةَ": "The prayer",
                "ٱللَّهَ": "God"
              }
            }
          },
          "description": "A JSON object containing phrases as keys and their translations as values."
        },
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "Phrases edited or added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseEditRequestData"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Phrase",
        "description": "Delete all phrases related to the specified language code",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "language",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "All phrases related to the language code have been deleted"
          }
        }
      }
    },
    "/error": {
      "get": {
        "summary": "List of Errors",
        "description": "View List of errors",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "order",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "to",
            "schema": {
              "type": "number"
            }
          }
        ],
        "tags": ["report"],
        "responses": {
          "200": {
            "description": "Returns the errors list in array",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponseData"
                }
              }
            }
          }
        }
      }
    }
  }
}
